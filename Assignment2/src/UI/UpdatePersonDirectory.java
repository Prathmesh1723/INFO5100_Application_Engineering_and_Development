package UI;


import Model.Admin;
import Model.Person;
import Model.Resident;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author 
 */
public class UpdatePersonDirectory extends javax.swing.JPanel {
    private JPanel lowerPanel;
    Person person;
    Admin admin;
    /**
     * Creates new form UpdatePersonDirectory
     */
    public UpdatePersonDirectory(JPanel lowerPanel, Person person, Admin admin) {
        initComponents();
        this.lowerPanel = lowerPanel;
        this.person = person;
        this.admin = admin;
        getPersonDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addPersonPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        genderTF = new javax.swing.JTextField();
        ageTF = new javax.swing.JTextField();
        hgTF = new javax.swing.JTextField();
        bpTF = new javax.swing.JTextField();
        pastIllnessTF = new javax.swing.JTextField();
        communityTF = new javax.swing.JTextField();
        cityTF = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        editDetailsButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        illnessTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        houseTF = new javax.swing.JTextField();
        isPatientCB = new javax.swing.JCheckBox();
        patientStatusTF = new javax.swing.JTextField();
        saveDetailsButton = new javax.swing.JButton();
        nameVal = new javax.swing.JLabel();
        ageVal = new javax.swing.JLabel();
        pulseVal = new javax.swing.JLabel();
        bpVal = new javax.swing.JLabel();
        houseVal = new javax.swing.JLabel();
        comVal = new javax.swing.JLabel();
        cityVal = new javax.swing.JLabel();
        illVal = new javax.swing.JLabel();
        genderVal = new javax.swing.JLabel();
        pastIllVal = new javax.swing.JLabel();

        addPersonPanel.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("UPDATE PERSON");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("ID :");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("NAME :");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("GENDER :");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("AGE :");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel6.setText("PULSE :");

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel7.setText("BP. :");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setText("PAST ILLNESS :");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel9.setText("COMMUNITY :");

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel10.setText("CITY :");

        idTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTFActionPerformed(evt);
            }
        });

        nameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTFKeyReleased(evt);
            }
        });

        genderTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                genderTFKeyReleased(evt);
            }
        });

        ageTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ageTFKeyReleased(evt);
            }
        });

        hgTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hgTFKeyReleased(evt);
            }
        });

        bpTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bpTFKeyReleased(evt);
            }
        });

        pastIllnessTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pastIllnessTFKeyReleased(evt);
            }
        });

        communityTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                communityTFKeyReleased(evt);
            }
        });

        cityTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cityTFKeyReleased(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        backButton.setText("<< BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        editDetailsButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        editDetailsButton.setText("EDIT DETAILS");
        editDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDetailsButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel11.setText("ILLNESS :");

        illnessTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                illnessTFKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel13.setText("HOUSE :");

        houseTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseTFActionPerformed(evt);
            }
        });
        houseTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                houseTFKeyReleased(evt);
            }
        });

        isPatientCB.setBackground(new java.awt.Color(255, 255, 255));
        isPatientCB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        isPatientCB.setText("IS PATIENT ?");
        isPatientCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPatientCBActionPerformed(evt);
            }
        });

        saveDetailsButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        saveDetailsButton.setText("SAVE DETAILS");
        saveDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPersonPanelLayout = new javax.swing.GroupLayout(addPersonPanel);
        addPersonPanel.setLayout(addPersonPanelLayout);
        addPersonPanelLayout.setHorizontalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel2)
                        .addGap(49, 49, 49)
                        .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel6)
                        .addGap(49, 49, 49)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pulseVal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(hgTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(nameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addComponent(jLabel7)
                        .addGap(74, 74, 74)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(bpVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bpTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel4)
                        .addGap(10, 10, 10)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(genderVal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(90, 90, 90)
                        .addComponent(jLabel13)
                        .addGap(48, 48, 48)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(houseVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(houseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(ageVal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addComponent(jLabel9)
                        .addGap(10, 10, 10)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(communityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(comVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel11)
                        .addGap(10, 10, 10)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(illVal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(illnessTF, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addComponent(jLabel10)
                        .addGap(60, 60, 60)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(cityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel8)
                        .addGap(4, 4, 4)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addComponent(editDetailsButton)
                                .addGap(18, 18, 18)
                                .addComponent(saveDetailsButton)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pastIllnessTF, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pastIllVal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(90, 90, 90)
                                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(isPatientCB)
                                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(patientStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        addPersonPanelLayout.setVerticalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)))
                .addGap(43, 43, 43)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2))
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(pulseVal, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hgTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(nameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(bpVal, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bpTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel4))
                    .addComponent(genderTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(genderVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel13))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(houseVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(houseTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(ageVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel9))
                    .addComponent(communityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(comVal, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel11))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(illVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(illnessTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel10))
                    .addComponent(cityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(cityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel8))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pastIllnessTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(pastIllVal, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(isPatientCB)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(patientStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addPersonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPersonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDetailsButtonActionPerformed
        // TODO add your handling code here:
        saveDetailsButton.setEnabled(false);
        editDetailsButton.setEnabled(true);

        isPatientCB.setEnabled(false);

        nameTF.setEnabled(false);
        genderTF.setEnabled(false);
        ageTF.setEnabled(false);
        illnessTF.setEnabled(false);
        pastIllnessTF.setEnabled(false);
        hgTF.setEnabled(false);
        bpTF.setEnabled(false);
        houseTF.setEnabled(false);
        communityTF.setEnabled(false);
        cityTF.setEnabled(false);

        if (isPatientCB.isSelected()) {
            patientStatusTF.setText("YES");
        } else {
            patientStatusTF.setText("NO");
        }

        patientStatusTF.setVisible(true);

        person.setIsPatient(isPatientCB.isSelected());
        person.setName(nameTF.getText());
        person.setGender(genderTF.getText());
        person.setAge(Integer.parseInt(ageTF.getText()));
        person.setIllness(illnessTF.getText());
        person.setPastIllness(pastIllnessTF.getText());
        person.setHB(Double.parseDouble(hgTF.getText()));
        person.setBloodPressure(Double.parseDouble(bpTF.getText()));
        person.getResidence().setCity(cityTF.getText());
        person.getResidence().setCommunity(communityTF.getText());
        person.getResidence().setHouse(houseTF.getText());

    }//GEN-LAST:event_saveDetailsButtonActionPerformed

    private void isPatientCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPatientCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isPatientCBActionPerformed

    private void houseTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_houseTFKeyReleased
        // TODO add your handling code here:
        String str ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(houseTF.getText());
        if(!match.matches()){
            houseVal.setText("Invalid input!");
        }
        else {
            houseVal.setText("");
        }
    }//GEN-LAST:event_houseTFKeyReleased

    private void houseTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseTFActionPerformed

    private void illnessTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_illnessTFKeyReleased
        // TODO add your handling code here:
        String Name ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(Name);
        Matcher match= p.matcher(illnessTF.getText());
        if(!match.matches()){
            illVal.setText("Invalid input!");
        }
        else {
            illVal.setText("");
        }
    }//GEN-LAST:event_illnessTFKeyReleased

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        nameTF.setText("");
        genderTF.setText("");
        ageTF.setText("");
        illnessTF.setText("");
        pastIllnessTF.setText("");
        hgTF.setText("");
        bpTF.setText("");
        houseTF.setText("");
        communityTF.setText("");
        cityTF.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void editDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDetailsButtonActionPerformed
        // TODO add your handling code here:
        saveDetailsButton.setEnabled(true);
        editDetailsButton.setEnabled(false);

        idTF.setEnabled(false);
        nameTF.setEnabled(true);
        genderTF.setEnabled(true);
        ageTF.setEnabled(true);
        illnessTF.setEnabled(true);
        pastIllnessTF.setEnabled(true);
        hgTF.setEnabled(true);
        bpTF.setEnabled(true);
        houseTF.setEnabled(true);
        cityTF.setEnabled(true);
        communityTF.setEnabled(true);

        if (patientStatusTF.getText().equals("YES")) {
            isPatientCB.setSelected(true);
        } else {
            isPatientCB.setSelected(false);
        }

        patientStatusTF.setVisible(false);
        isPatientCB.setEnabled(true);
    }//GEN-LAST:event_editDetailsButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        PersonDirectory systemPerson = new PersonDirectory(lowerPanel, admin);
        lowerPanel.add("PersonPanel",systemPerson);
        CardLayout layout = (CardLayout)lowerPanel.getLayout();
        layout.next(lowerPanel);
    }//GEN-LAST:event_backButtonActionPerformed

    private void cityTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityTFKeyReleased
        // TODO add your handling code here:
        String str ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(cityTF.getText());
        if(!match.matches()){
            cityVal.setText("Invalid input!");
        }
        else {
            cityVal.setText("");
        }
    }//GEN-LAST:event_cityTFKeyReleased

    private void communityTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_communityTFKeyReleased
        // TODO add your handling code here:
        String str ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(communityTF.getText());
        if(!match.matches()){
            comVal.setText("Invalid input!");
        }
        else {
            comVal.setText("");
        }
    }//GEN-LAST:event_communityTFKeyReleased

    private void pastIllnessTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pastIllnessTFKeyReleased
        // TODO add your handling code here:
        String str ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(pastIllnessTF.getText());
        if(!match.matches()){
            pastIllVal.setText("Invalid input!");
        }
        else {
            pastIllVal.setText("");
        }
    }//GEN-LAST:event_pastIllnessTFKeyReleased

    private void bpTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bpTFKeyReleased
        // TODO add your handling code here:
        String str ="^[0-9]{0,10}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(bpTF.getText());
        if(!match.matches()){
            bpVal.setText("Invalid! Only numeric input");
        }
        else {
            bpVal.setText("");
        }
    }//GEN-LAST:event_bpTFKeyReleased

    private void hgTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hgTFKeyReleased
        // TODO add your handling code here:
        String str ="^[0-9]{0,10}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(hgTF.getText());
        if(!match.matches()){
            pulseVal.setText("Invalid! Only numeric input");
        }
        else {
            pulseVal.setText("");
        }
    }//GEN-LAST:event_hgTFKeyReleased

    private void ageTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageTFKeyReleased
        // TODO add your handling code here:
        String age ="^[0-9]{0,10}$";
        Pattern p = Pattern.compile(age);
        Matcher match= p.matcher(ageTF.getText());
        if(!match.matches()){
            ageVal.setText("Invalid! Only numeric input");
        }
        else {
            ageVal.setText("");
        }
    }//GEN-LAST:event_ageTFKeyReleased

    private void genderTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genderTFKeyReleased
        // TODO add your handling code here:
        String Name ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(Name);
        Matcher match= p.matcher(genderTF.getText());
        if(!match.matches()){
            genderVal.setText("Invalid input!");
        }
        else {
            genderVal.setText("");
        }
    }//GEN-LAST:event_genderTFKeyReleased

    private void nameTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTFKeyReleased
        // TODO add your handling code here:
        String Name ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(Name);
        Matcher match= p.matcher(nameTF.getText());
        if(!match.matches()){
            nameVal.setText("Invalid input!");
        }
        else {
            nameVal.setText("");
        }
    }//GEN-LAST:event_nameTFKeyReleased

    private void idTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addPersonPanel;
    private javax.swing.JTextField ageTF;
    private javax.swing.JLabel ageVal;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bpTF;
    private javax.swing.JLabel bpVal;
    private javax.swing.JTextField cityTF;
    private javax.swing.JLabel cityVal;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel comVal;
    private javax.swing.JTextField communityTF;
    private javax.swing.JButton editDetailsButton;
    private javax.swing.JTextField genderTF;
    private javax.swing.JLabel genderVal;
    private javax.swing.JTextField hgTF;
    private javax.swing.JTextField houseTF;
    private javax.swing.JLabel houseVal;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel illVal;
    private javax.swing.JTextField illnessTF;
    private javax.swing.JCheckBox isPatientCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel nameVal;
    private javax.swing.JLabel pastIllVal;
    private javax.swing.JTextField pastIllnessTF;
    private javax.swing.JTextField patientStatusTF;
    private javax.swing.JLabel pulseVal;
    private javax.swing.JButton saveDetailsButton;
    // End of variables declaration//GEN-END:variables

private void getPersonDetails() {
        if(person.isIsPatient() == true){
            patientStatusTF.setText("YES");
        }
        else{
            patientStatusTF.setText("NO");
        }
        isPatientCB.setEnabled(false);
        idTF.setText(String.valueOf(person.getId()));
        idTF.setEnabled(false);
        nameTF.setText(person.getName());
        nameTF.setEnabled(false);
        genderTF.setText(person.getGender());
        genderTF.setEnabled(false);
        ageTF.setText(String.valueOf(person.getAge()));
        ageTF.setEnabled(false);
        illnessTF.setText(person.getIllness());
        illnessTF.setEnabled(false);
        pastIllnessTF.setText(person.getPastIllness());
        pastIllnessTF.setEnabled(false);
        hgTF.setText(String.valueOf(person.getHB()));
        hgTF.setEnabled(false);
        bpTF.setText(String.valueOf(person.getBloodPressure()));
        bpTF.setEnabled(false);
        cityTF.setText(person.getResidence().getCity());
        cityTF.setEnabled(false);
        communityTF.setText(person.getResidence().getCommunity());
        communityTF.setEnabled(false);
        houseTF.setText(person.getResidence().getHouse());
        houseTF.setEnabled(false);

        saveDetailsButton.setEnabled(false);
    }
}
