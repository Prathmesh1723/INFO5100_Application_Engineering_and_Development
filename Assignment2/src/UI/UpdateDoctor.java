/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Admin;
import Model.Doctor;
import Model.Resident;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author prath
 */
public class UpdateDoctor extends javax.swing.JPanel {

    Doctor doctor;
    Admin admin;
    JPanel lowerPanel;
    /**
     * Creates new form UpdateDoctor
     */
    public UpdateDoctor(JPanel lowerPanel, Doctor doctor, Admin admin) {
        initComponents();
        this.lowerPanel = lowerPanel;
        this.doctor = doctor;
        this.admin = admin;
        getDoctorDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        DocidTxt = new javax.swing.JTextField();
        DocComTxt = new javax.swing.JTextField();
        DocNameTxt = new javax.swing.JTextField();
        editDetailsButton = new javax.swing.JButton();
        saveDetailsButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        DocIdTxt = new javax.swing.JLabel();
        DocNText = new javax.swing.JLabel();
        DocCommTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        backButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        backButton.setText("<< BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("UPDATE DOCTOR");

        DocidTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocidTxtActionPerformed(evt);
            }
        });

        DocComTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DocComTxtKeyReleased(evt);
            }
        });

        DocNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DocNameTxtKeyReleased(evt);
            }
        });

        editDetailsButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        editDetailsButton.setText("EDIT DETAILS");
        editDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDetailsButtonActionPerformed(evt);
            }
        });

        saveDetailsButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        saveDetailsButton.setText("SAVE DETAILS");
        saveDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDetailsButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        DocIdTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        DocIdTxt.setText("Doctor ID:");
        DocIdTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DocIdTxtKeyReleased(evt);
            }
        });

        DocNText.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        DocNText.setText("Doctor Name:");

        DocCommTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        DocCommTxt.setText("Community:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(323, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(351, 351, 351))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DocIdTxt)
                            .addComponent(DocNText)
                            .addComponent(DocCommTxt))
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DocComTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(DocidTxt)
                                .addComponent(DocNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(281, 281, 281))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(editDetailsButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveDetailsButton)
                        .addGap(31, 31, 31)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(267, 267, 267))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocidTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DocIdTxt))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DocNText))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocComTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DocCommTxt))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(311, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        PersonDirectory PersonDirectory = new PersonDirectory(lowerPanel, admin);
        lowerPanel.add("PersonPanel",PersonDirectory);
        CardLayout layout = (CardLayout)lowerPanel.getLayout();
        layout.next(lowerPanel);
    }//GEN-LAST:event_backButtonActionPerformed

    private void DocidTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocidTxtActionPerformed
        // TODO add your handling code here:
        String Name ="^[0-9]{0,10}$";
        Pattern p = Pattern.compile(Name);
        Matcher match= p.matcher(DocidTxt.getText());
        if(!match.matches()){
            DocidTxt.setText("Invalid input!");
        }
        else {
            DocidTxt.setText("");
        }
    }//GEN-LAST:event_DocidTxtActionPerformed

    private void DocComTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DocComTxtKeyReleased
        // TODO add your handling code here:
        String Name ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(Name);
        Matcher match= p.matcher(DocComTxt.getText());
        if(!match.matches()){
            DocComTxt.setText("Invalid input!");
        }
        else {
            DocComTxt.setText("");
        }
    }//GEN-LAST:event_DocComTxtKeyReleased

    private void DocNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DocNameTxtKeyReleased
        // TODO add your handling code here:
        String str ="^[a-zA-Z\\s]{0,30}$";
        Pattern p = Pattern.compile(str);
        Matcher match= p.matcher(DocNameTxt.getText());
        if(!match.matches()){
            DocNText.setText("Invalid! Only numeric input");
        }
        else {
            DocNText.setText("");
        }
    }//GEN-LAST:event_DocNameTxtKeyReleased

    private void editDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDetailsButtonActionPerformed
        // TODO add your handling code here:
        saveDetailsButton.setEnabled(true);
        editDetailsButton.setEnabled(false);

        DocidTxt.setEnabled(true);
        DocComTxt.setEnabled(true);
        DocNameTxt.setEnabled(true);
        
    }//GEN-LAST:event_editDetailsButtonActionPerformed

    private void saveDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDetailsButtonActionPerformed
        // TODO add your handling code here:
        saveDetailsButton.setEnabled(false);
        editDetailsButton.setEnabled(true);

        

        DocComTxt.setEnabled(false);
        DocNameTxt.setEnabled(false);
        DocidTxt.setEnabled(false);

        doctor.setDocname(DocNameTxt.getText());
        doctor.setDocid(Integer.parseInt(DocidTxt.getText()));
        doctor.setCommunity(DocComTxt.getText());

    }//GEN-LAST:event_saveDetailsButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        DocComTxt.setText("");
        DocidTxt.setText("");
        DocNameTxt.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void DocIdTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DocIdTxtKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_DocIdTxtKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DocComTxt;
    private javax.swing.JLabel DocCommTxt;
    private javax.swing.JLabel DocIdTxt;
    private javax.swing.JLabel DocNText;
    private javax.swing.JTextField DocNameTxt;
    private javax.swing.JTextField DocidTxt;
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton editDetailsButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton saveDetailsButton;
    // End of variables declaration//GEN-END:variables

    private void getDoctorDetails() {
        DocComTxt.setText(doctor.getCommunity());
        DocNameTxt.setText(doctor.getDocname());
        DocidTxt.setText(String.valueOf(doctor.getDocid()));

        saveDetailsButton.setEnabled(false);
    }

}
